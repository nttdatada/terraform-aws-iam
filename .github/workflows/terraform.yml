name: Terraform Modules

on:
  pull_request: 
    branchs:
      - master

jobs:
  terraform:
    name: Terrafom Modules Stack
    runs-on: ubuntu-latest
    environment: stage
    strategy:
      max-parallel: 1
      matrix: 
        dir: [ iam_instance_profile, policy, roles ]


    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION}}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Terraform Init
        id: init-${{ matrix.dir }}
        run: terraform init
        working-directory: ${{ matrix.dir }}

      - name: Terraform Validade
        id: validate-${{ matrix.dir }}
        run: terraform validate -no-color
        working-directory: ${{ matrix.dir }}
      
      - name: Update Pull Requests
        uses: actions/github-script@0.9.0
        with:
          gitub-token: ${{ secrets.GITHUB_TOKEN }} 
          script: |
            const output = `#### Terraform Validation ðŸ¤–\`${{ steps.validate-${{ matrix.dir }}.outcome }}\`

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })    
